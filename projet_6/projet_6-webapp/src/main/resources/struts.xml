<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.5//EN"
        "http://struts.apache.org/dtds/struts-2.5.dtd">
<struts>



	<!-- ============================================================== PACKAGE DE BASE ============================================================== -->
    
    
    
    <package name="base" abstract="true" extends="struts-default">
    	
    	
    	
       <!-- ======================================= Interceptors ======================================= -->
       
       <interceptors>
       		<!-- ==================== Déclaration des interceptors personnalisés ==================== -->
       		
        	<interceptor name="authentification" class="authentificationInterceptor" />
        	<interceptor name="index" class="indexInterceptor" />
        	<interceptor name="encoding" class="encodingInterceptor" />
        	
        	
        	<!-- ==================== Définition des piles d'interceptor ==================== -->
        	
        	<interceptor-stack name="publicStack">
                <interceptor-ref name="encoding" />
                <interceptor-ref name="defaultStack" />
            </interceptor-stack>
            
        	<interceptor-stack name="halfPrivateStack">
                <interceptor-ref name="index" />
                <interceptor-ref name="publicStack" />
            </interceptor-stack>
        	
            <interceptor-stack name="authenticatedStack">
                <interceptor-ref name="authentification" />
                <interceptor-ref name="publicStack" />
            </interceptor-stack>
        </interceptors>
        
        
        
        
        <!-- ====================================== Results globaux ======================================-->
        
        <global-results>
        	<result name="error-forbidden" type="httpheader">
                <param name="error">403</param>
            </result>
            
            <result name="error-forbidden-bis" type= "redirectAction" >
                <param name="actionName">index</param>
            </result>   
            
            <result name="error">/WEB-INF/classes/WEB-INF/jsp/other/error.jsp</result>      
        </global-results>
                
     </package>
     
     
     
     
     <!-- ============================================================== PACKAGE PUBLIC ============================================================== -->
     
     
     
     <!-- ==============================================  Définition du package ============================================== -->
     <package name="public" extends="base">
     
     
     
     	<!-- ======================= Définition de PUBLIC STACK, l'interceptor de reference du package ======================= -->
        <default-interceptor-ref name="publicStack" />
     
     
     
		<!-- ========================== Définition de l'action par défaut ============================== -->
    	<default-action-ref name="index" />
    	
    	
    	
        <!-- ===========================  Action INDEX" ============================== -->
        <action name="index">
            <result>/WEB-INF/jsp/other/index.jsp</result>
        </action>
        
        <action name="test_j">
            <result>/WEB-INF/jsp/other/test.jsp</result>
        </action>
        
        <action name="test_h">
            <result>/WEB-INF/jsp/other/test.html</result>
        </action>
        
        
        
     <!-- ===================================================== GESTION TOPO ACTION ==================================================== -->
        
        
        
        <!-- =============== Action TOPO_LIST permettant d'afficher la liste des topos =============== -->
        <action name="topo_list"
        		class="gestionTopoAction"
        		method="doList">
        	<result>/WEB-INF/jsp/topo/list-topo.jsp</result>
        </action>
        
        
        
        <!-- =============== Action TOPO_DETAIL permettant d'afficher les détails d'un topo =============== -->
        <action name="topo_detail"
        		class="gestionTopoAction"
        		method="doDetail">
        	
        	<!-- Interceptor necessaire dans le cas ou on arrive sur cette page suite à une redirection (ex :deposer commentaire, input à l'ajout d'un topo)  -->	
        	<interceptor-ref name="publicStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">RETRIEVE</param>
   		 	</interceptor-ref>
    
        	<result name="success">/WEB-INF/jsp/topo/topo.jsp</result>
        	
        </action>
        
        
        
        <!-- ===================================================== GESTION SITE ACTION ==================================================== -->
        
        
        <!--  =============== Action SITE_LIST permettant d'afficher la liste des sites =============== -->
        <action name="site_list"
        		class="gestionSiteAction"
        		method="doList">
        	<result>/WEB-INF/jsp/site/list-site.jsp</result>
        </action>
        
        
        
        <!-- =============== Action SITE_DETAIL permettant d'afficher les détails d'un site =============== -->
        <action name="site_detail"
        		class="gestionSiteAction"
        		method="doDetail">
        	
        	<!-- Interceptor necessaire dans le cas ou on arrive sur cette page suite à une redirection (ex :deposer commentaire)  -->	
        	<interceptor-ref name="publicStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">RETRIEVE</param>
   		 	</interceptor-ref>
    
        	<result name="success">/WEB-INF/jsp/site/site.jsp</result>
        	
        </action>
        
        
        
        <!-- ===================================================== GESTION UTILISATEUR ACTION ==================================================== -->
                
        
        
        <!-- =============== Action UTILISATEUR_DETAIL permettant d'afficher les détails d'un utilisateur =============== -->
        <action name="utilisateur_detail"
        		class="gestionUtilisateurAction"
        		method="doDetail">
        		
        	<!-- Interceptor necessaire pour récupérer le message de succes de l'inscription, ou les entrées du champs mails et pseudo suite à un input -->	
        	<interceptor-ref name="publicStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">RETRIEVE</param>
   		 	</interceptor-ref>
        		    		
        	<result name="success">/WEB-INF/jsp/utilisateur/profil.jsp</result>
        </action>
        
        
        
     </package>
     
     
     
     
     
     
     <!-- ============================================================== PACKAGE SEMI-PRIVÉ ============================================================== -->
     
     
     
     <!-- ==============================================  Définition du package ============================================== -->
     <package name="halfPrivate" extends="base">
     
     
     
     	<!-- ========================================== Définition de HALF STACK, l'interceptor de reference du package ================================ -->
     	<default-interceptor-ref name="halfPrivateStack" />
     	
        
           
     	<!-- ===================================================== GESTION UTILISATEUR ACTION ==================================================== -->
        
        
        
        <!-- =============== Action INSCRIPTION permettant de s'inscrire =============== -->
        <action name="inscription"
        		class="gestionUtilisateurAction"
        		method="doInscription">
        	
        	<!-- Interceptor necessaire pour stocker le message de succes de l'inscription (succes = redirection = securité)  -->	
        	<interceptor-ref name="halfPrivateStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
   		 	</interceptor-ref>
    
        	<result name="success" type="redirectAction">login</result>
        	<result name="input">/WEB-INF/jsp/utilisateur/inscription.jsp</result>
        </action>
        
        
        
        <!-- =============== Action LOGIN permettant de se connecter =============== -->
        <action name="login"
        		class="gestionUtilisateurAction"
        		method="doLogin">
        		
        	<!-- Interceptor necessaire pour récupérer le message de succes de l'inscription, ou les messages et entrées liés aux inputs -->	
        	<interceptor-ref name="halfPrivateStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">RETRIEVE</param>
   		 	</interceptor-ref>
        		
        	<result name="success" type="redirectAction">index</result>
        	<result name="input">/WEB-INF/jsp/utilisateur/connexion.jsp</result>
        </action>
     
     
     
     </package>
     
     
     
     <!-- ============================================================== PACKAGE PRIVÉ ============================================================== -->
      
      
      <!-- ==============================================  Définition du package ============================================== -->
      <package name="private" extends="base">
      
      
      
      	<!-- ======================= Définition de AUTHENTICATED STACK l'interceptor de reference du package ======================= -->
      	<default-interceptor-ref name="authenticatedStack" />
     
     
     
     <!-- ===================================================== GESTION TOPO ACTION ==================================================== -->
     
     
     
     	<!-- =============== Action LIBRARY permettant d'afficher la bibliotheque de l'utilisateur =============== -->
		<action name="library"
        		class="gestionTopoAction"
        		method="doLibrary">
        	
        	<!-- Interceptor necessaire pour récupérer les messages et entrées liés aux inputs (ex: Retirer topo) -->	
        	<interceptor-ref name="authenticatedStack" />
    	 	<interceptor-ref name="store">
        		<param name="operationMode">RETRIEVE</param>
    		</interceptor-ref>	
        		
        	<result name="success">/WEB-INF/jsp/topo/bibliotheque.jsp</result>
        </action>
     
     
     
     	<!-- =============== Action ADD_LIBRARY permettant d'ajouter un topo à la bibliotheque de l'utilisateur =============== -->
		<action name="add_library"
        		class="gestionTopoAction"
        		method="doAddLibrary">
        	
        	<!-- Interceptor necessaire pour stocker l'id du topo et la quantité suite à (un input) une redirection obligatoire (action dans une action) -->		
        	<interceptor-ref name="authenticatedStack" />
    	 	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
    		</interceptor-ref>	
        		
        	<result name ="success" type="redirectAction">library</result>
        	
        	<result name ="input" type="redirectAction">
        		<param name="actionName">topo_detail</param>
        		<param name="idTopo">${idTopo}</param>
        		<param name="quantiteTopo">${quantiteTopo}</param>
    		</result>
        </action>
        
        
        
        <!-- =============== Action REMOVE_LIBRARY permettant de supprimer un topo de la bibliotheque de l'utilisateur =============== -->
		<action name="remove_library"
        		class="gestionTopoAction"
        		method="doRemoveLibrary">
        	
        	<!-- Interceptor necessaire pour stocker la quantité suite à (un input) une redirection obligatoire (action dans une action) -->	
        	<interceptor-ref name="authenticatedStack" />
    	 	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
    		</interceptor-ref>
    		
        	<result name="success" type="redirectAction">library</result>
        	<result name ="input" type="redirectAction">
        		<param name="actionName">library</param>
        		<param name="quantiteTopo">${quantiteTopo}</param>
        		<param name="idTopo">${idTopo}</param>
    		</result>
        </action>
        
        
        
        <!-- =============== Action TOPO_COMMENT permettant d'ajouter un commentaire de topo =============== -->        
        <action name="topo_comment"
        		class="gestionTopoAction"
        		method="doAddComment">
        	
        	<!-- Interceptor necessaire pour stocker l'id du topo (et le contenu => en fonction du result)=> redirection obligatoire (action dans une action et ecriture de donnée) -->
			<interceptor-ref name="authenticatedStack" />
    	 	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
    		</interceptor-ref>
    
        	<result name= "success" type="redirectAction">
        		<param name="actionName">topo_detail</param>
        		<param name="idTopo">${idTopo}</param>
    		</result>
    		<result name= "input" type="redirectAction">
        		<param name="actionName">topo_detail</param>
        		<param name="idTopo">${idTopo}</param>
        		<param name="contenuCom">${contenuCom}</param>
    		</result>
        </action>
        
        
        
        <!-- ===================================================== GESTION SITE ACTION ==================================================== -->
        
        
        
         <!-- =============== Action SITE_COMMENT permettant d'ajouter un commentaire de site =============== -->        
        <action name="site_comment"
        		class="gestionSiteAction"
        		method="doAddComment">
        	
        	<!-- Interceptor necessaire pour stocker l'id du site (et le contenu => en fonction du result)=> redirection obligatoire (action dans une action et ecriture de donnée) -->
			<interceptor-ref name="authenticatedStack" />
    	 	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
    		</interceptor-ref>
    
        	<result name= "success" type="redirectAction">
        		<param name="actionName">site_detail</param>
        		<param name="idSite">${idSite}</param>
    		</result>
    		<result name= "input" type="redirectAction">
        		<param name="actionName">site_detail</param>
        		<param name="idSite">${idSite}</param>
        		<param name="contenu">${contenu}</param>
    		</result>
        </action>
        
        
        
        <!-- ===================================================== GESTION UTILISATEUR ACTION ==================================================== -->
        
        
        
        <!-- =============== Action LOGOUT permettant de se déconnecter =============== -->
        <action name="logout"
        		class="gestionUtilisateurAction"
        		method="doLogout">
        	<result name="success" type="redirectAction">index</result>
        </action>
        
        
        
        <!-- =============== Action MODIFY_MAIL permettant de modifier l'adresse mail =============== -->
        <action name="modify_mail"
        		class="gestionUtilisateurAction"
        		method="doModifyMail">
        		
        	<!-- Interceptor necessaire pour envoyer l'id l'utilisateur et les messages en cas de succes de la modification (et juste fieldError en input)   -->	
        	<interceptor-ref name="authenticatedStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
   		 	</interceptor-ref>
   		 	
        	<result name="success" type="redirectAction">
        		<param name="actionName">utilisateur_detail</param>
        		<param name="idUtilisateur">${idUtilisateur}</param>
        	</result>
        	
        	<result name="input" type="redirectAction">
        		<param name="actionName">utilisateur_detail</param>
        		<param name="idUtilisateur">${idUtilisateur}</param>
        		<param name="mail">${mail}</param>
        	</result>
        </action>
        
        
        <!-- =============== Action MODIFY_PSEUDO permettant de modifier le pseudo =============== -->
        <action name="modify_pseudo"
        		class="gestionUtilisateurAction"
        		method="doModifyPseudo">
        		
        	<!-- Interceptor necessaire pour envoyer l'id l'utilisateur et les messages en cas de succes de la modification (et juste fieldError en input)   -->	
        	<interceptor-ref name="authenticatedStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
   		 	</interceptor-ref>
   		 	
        	<result name="success" type="redirectAction">
        		<param name="actionName">utilisateur_detail</param>
        		<param name="idUtilisateur">${idUtilisateur}</param>
        	</result>
        	
        	<result name="input" type="redirectAction">
        		<param name="actionName">utilisateur_detail</param>
        		<param name="idUtilisateur">${idUtilisateur}</param>
        		<param name="pseudo">${pseudo}</param>
        	</result>
        </action>
        
        
        <!-- =============== Action MODIFY_LOCALISATION permettant de modifier la localisation =============== -->
        <action name="modify_localisation"
        		class="gestionUtilisateurAction"
        		method="doModifyLocalisation">
        		
        	<!-- Interceptor necessaire pour envoyer l'id l'utilisateur et les messages en cas de succes de la modification (et juste fieldError en input)   -->	
        	<interceptor-ref name="authenticatedStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
   		 	</interceptor-ref>
   		 	
        	<result name="success" type="redirectAction">
        		<param name="actionName">utilisateur_detail</param>
        		<param name="idUtilisateur">${idUtilisateur}</param>
        	</result>
        	
        	<result name="input" type="redirectAction">
        		<param name="actionName">utilisateur_detail</param>
        		<param name="idUtilisateur">${idUtilisateur}</param>
        		<param name="localisation">${localisation}</param>
        	</result>
        </action>
        
        
        <!-- =============== Action MODIFY_PASS permettant de modifier le mot de passe =============== -->
        <action name="modify_pass"
        		class="gestionUtilisateurAction"
        		method="doModifyPass">
        		
        	<!-- Interceptor necessaire pour envoyer l'id l'utilisateur et les messages en cas de succes de la modification (et juste fieldError en input)   -->	
        	<interceptor-ref name="authenticatedStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
   		 	</interceptor-ref>
   		 	
        	<result name="success" type="redirectAction">
        		<param name="actionName">utilisateur_detail</param>
        		<param name="idUtilisateur">${idUtilisateur}</param>
        	</result>
        	
        	<result name="input" type="redirectAction">
        		<param name="actionName">utilisateur_detail</param>
        		<param name="idUtilisateur">${idUtilisateur}</param>
        	</result>
        </action>
        
        
        
        <!-- ===================================================== GESTION PRET ACTION ==================================================== -->
        
        
        
        <!-- =============== Action PRET_LIST permettant d'afficher la liste des prets / ou emprunts =============== -->
        <action name="pret_list"
        		class="gestionPretAction"
        		method="doList">
        		
        	<result name="success">/WEB-INF/jsp/pret/list-pret.jsp</result>
        </action>
        
        <!-- =============== Action PRET_DETAIL permettant d'afficher les détails d'un prêt / ou emprunt =============== -->
        <action name="pret_detail"
        		class="gestionPretAction"
        		method="doDetail">
        	
        	<!-- Interceptor necessaire pour récupérer le type de pret,  l'id du pret et les messages en cas de succes et en input, le contenu est également récupéré (MESSAGE_PRET)  -->	
        	<interceptor-ref name="authenticatedStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">RETRIEVE</param>
   		 	</interceptor-ref>
        	
        	<result name="success">/WEB-INF/jsp/pret/pret.jsp</result>
        </action>
        
        
        
         <!-- =============== Action PRET_MESSAGE permettant d'envoyer un message sur la fiche d'un prets =============== -->
        <action name="pret_message"
        		class="gestionPretAction"
        		method="doAddMessage">
        		
        	<!-- Interceptor necessaire pour envoyer le type de pret, l'id du pret et les messages en cas de succes, en input le contenu est egalement envoyé pour qu'il soit restitué sur pret.jsp   -->	
        	<interceptor-ref name="authenticatedStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
   		 	</interceptor-ref>
        		
        	<result name="success" type="redirectAction">
        		<param name="actionName">pret_detail</param>
        		<param name="idPret">${idPret}</param>
        		<param name="type">${type}</param>
        	</result>
        	        	
        	<result name="input" type="redirectAction">
        		<param name="actionName">pret_detail</param>
        		<param name="idPret">${idPret}</param>
        		<param name="contenu">${contenu}</param>
        		<param name="type">${type}</param>
        	</result>
        </action>
        
        
        
        <!-- =============== Action PRET_MESSAGE permettant d'envoyer un message sur la fiche d'un prets =============== -->
        <action name="pret_decide"
        		class="gestionPretAction"
        		method="doDecide">
        		
        	<!-- Interceptor necessaire pour envoyer le type de pret, l'id du pret et les messages en cas de succes, en input le contenu est egalement envoyé pour qu'il soit restitué sur pret.jsp   -->	
        	<interceptor-ref name="authenticatedStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
   		 	</interceptor-ref>
        		
        	<result name="success" type="redirectAction">
        		<param name="actionName">pret_detail</param>
        		<param name="idPret">${idPret}</param>
        		<param name="type">${type}</param>
        	</result>
        	        	
        	<result name="input" type="redirectAction">
        		<param name="actionName">pret_detail</param>
        		<param name="idPret">${idPret}</param>
        		<param name="type">${type}</param>
        	</result>
        </action>
        
        
        
        <!-- =============== Action PRET_MESSAGE permettant d'envoyer un message sur la fiche d'un prets =============== -->
        <action name="pret_finish"
        		class="gestionPretAction"
        		method="doFinish">
        		
        	<!-- Interceptor necessaire pour envoyer le type de pret, l'id du pret et les messages en cas de succes, en input le contenu est egalement envoyé pour qu'il soit restitué sur pret.jsp   -->	
        	<interceptor-ref name="authenticatedStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
   		 	</interceptor-ref>
        		
        	<result name="success" type="redirectAction">
        		<param name="actionName">pret_detail</param>
        		<param name="idPret">${idPret}</param>
        		<param name="type">${type}</param>
        	</result>
        	        	
        	<result name="input" type="redirectAction">
        		<param name="actionName">pret_detail</param>
        		<param name="idPret">${idPret}</param>
        		<param name="type">${type}</param>
        	</result>
        </action>
        
        
        
        <!-- =============== Action PRET_MESSAGE permettant d'envoyer un message sur la fiche d'un prets =============== -->
        <action name="pret_cancel"
        		class="gestionPretAction"
        		method="doCancel">
        		
        	<!-- Interceptor necessaire pour envoyer le type de pret, l'id du pret et les messages en cas de succes, en input le contenu est egalement envoyé pour qu'il soit restitué sur pret.jsp   -->	
        	<interceptor-ref name="authenticatedStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
   		 	</interceptor-ref>
        		
        	<result name="success" type="redirectAction">
        		<param name="actionName">pret_detail</param>
        		<param name="idPret">${idPret}</param>
        		<param name="type">${type}</param>
        	</result>
        	        	
        	<result name="input" type="redirectAction">
        		<param name="actionName">pret_detail</param>
        		<param name="idPret">${idPret}</param>
        		<param name="type">${type}</param>
        	</result>
        </action>
        
        
        
        <!-- =============== Action PRET_ASK permettant de demander un pret =============== -->
        <action name="pret_ask"
        		class="gestionPretAction"
        		method="doAsk">
        		
        	<!-- Interceptor necessaire pour envoyer le type de pret, l'id du pret et les messages en cas de succes, en input le contenu est egalement envoyé pour qu'il soit restitué sur pret.jsp   -->	
        	<interceptor-ref name="authenticatedStack" />
        	<interceptor-ref name="store">
        		<param name="operationMode">STORE</param>
   		 	</interceptor-ref>
        		
        	<result name="success" type="redirectAction">
        		<param name="actionName">pret_detail</param>
        		<param name="idPret">${idPret}</param>
        		<param name="type">emprunt</param>
        	</result>
        	        	
        	<result name="input" type="redirectAction">
        		<param name="actionName">topo_detail</param>
        		<param name="idTopo">${idTopo}</param>
        		<param name="idProprietaire">${idProprietaire}</param>
        		<param name="contenu">${contenu}</param>
        	</result>
        </action>
     </package>
     
         
</struts>